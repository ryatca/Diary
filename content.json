{"pages":[{"title":"About me","text":"自己紹介です秋田県に住んでいる情報系の専門学生です。時々気分転換で色んな所に車で飛んでいきます。 勉強したことがある言語 Java JavaScript PHP HTML,CSS C# (Unityで触った程度ですが…。) Python (少し触った程度なのでコードが読めるか読めないか程度です。) 他に勉強したこと jQuery (JavaScript) laravel (PHP) Bootstrap (CSS) 基本的に家にいますが、ゲームセンターにも行くので会ったらよろしくお願いします。","link":"/diary/about/index.html"}],"posts":[{"title":"Vueを学んで三日で作ったもの","text":"寝る時間は確保してあるのに超眠たいです。 最近学校でVue.jsを触り始めました。ちなみにVue.jsなんて名前しか知らないし、SPAによく使われてるやつ(無知)みたいな認識でした。 でも基礎的なことは知っておいて損はないはずなので三日間かけてちょっとしたアプリを作りました。(時間的には一日程度) ToDoListGitHub興味がある人はCloneでもしてコードをいじくってください。 使ってみてバグを発見してもらえれば助かります(Vueそこまで触ってないし絶対どこかにあるんだよね)こういう機能も欲しい！みたいなことも教えてください。その機能が次の課題になるのでありがたいです。 詳しい説明とかもしたかったんですけど色々とまとまらなくてもう少し勉強してからVue.jsのことを書こうと思います！ …ですが5月末に大事な予選があり、しばらくはサーバサイドを重点的に勉強するのでサーバサイドの記事が多くなるかも ;3","link":"/diary/2019/04/23/Vueを学んで三日で作ったもの/"},{"title":"4月1日","text":"新社会人の皆さんおめでとうございます！頑張ってくださいね。 ちなみに私のほうは始業日で「休みてぇ～」とか言いながら登校しました。今日は授業全くやらずに2コマ分(180分)使い教室内のレイアウトをガラッと変えました。一人に一机は神だぞ！ 明日なんか簡単なものでも作ろうかと思いましたが、最近予定がツメツメで何もできないし悲しくなってます。忙しいの承知でなんか公開できるようなクソを作りたいですね。。。一緒に作ってくれる方も募集してます。 あとは昔につくったWebベースで作ったアプリをGitHubに上げときました。実用性は0ですが確認していただけると嬉しいです。MyTree やっぱり画像が欲しいですね。あんまり圧迫したくない&amp;表示速度を高めたいので、解像度下げて軽量もしてくれるクソ便利なものあったらうれしいなあ。","link":"/diary/2019/04/01/4月1日/"},{"title":"jQueryのclick()とon('click')の違い","text":"学校始まってから体力なさ過ぎて死んでました学校とバイトが終わってから、時間があっても疲れで寝てしまうので体力はつけないとな… 今回は題名の通り、jQueryのclick()とon(‘click’)の違いです。結論から言うとどちらも同じです。じゃあなんで同じのがあるかという話もわかりません。(知ってたら教えてください。) 個人的にはon()のほうが使いやすいと思ってますね。一つの処理を一発でまとめられるので。12345$(&apos;#uooo&apos;).on({ &apos;click&apos; : function(){処理}, //クリック時 &apos;mouseover&apos; : function(){処理}, //マウスが要素に入った時 &apos;mouseleave&apos;: function(){処理} //マウスが要素から外れたとき}); みたいな感じで書けます。 でも結局こういう書き方って慣れてないと書けないと思っています。実際周りにフロントエンドの人が多いのでコード見てみるとclick()が多いですね。そもそもｊQueryはプログラムが書けないデザイナー用に生まれたフレームワークだと聞いています。なのでclick()は直感的にわかりやすいということで使われてるんじゃないかな～と思います。 こんなこと書いたところで実際に動く部分は同じなので、自分の書きやすい方で書いていきましょう。","link":"/diary/2019/04/09/jQueryのclick-とon-click-の違い/"},{"title":"3月30の土曜日","text":"色々車で飛び回ってたので忘れないように書き残します。 やったこと ハードオフでPS2を購入 ドン・キホーテでスコール赤りんごを500ml×24本の箱買った(1010円と超安かった) 何故か216円でキャプチャボードが手に入った 特に面白いことしてませんがキャプチャボードをジャンク品から探し当てたので気分がいいです。そろそろ画像も貼りたいです。いい感じの圧縮ツール募集。平日は勉強漬けなので休日は積極的にリフレッシュしていきたいです。誘えば多分外に出るので誘ってください、お願いします(?)","link":"/diary/2019/03/30/3月30の土曜日/"},{"title":"とりあえず。","text":"とりあえず何も考えずに作ってみました。 ロゴなどは流用しているので後でなんか作っておきます。。。 あと、これは備忘録的な意味を込めてるのでTwitterよりつまらないことをだらだら書くつもりです。 ちなみにマークダウン記法が超苦手なので、この短い文章でもだいぶ時間かかっているので克服できるように頑張ります。マークアップで自己紹介書いたけど全くスマートじゃない… マークアップで書ければ超楽なんだけどな","link":"/diary/2019/03/29/とりあえず。/"},{"title":"REST API作るときにコケたことを忘れないためのメモ","text":"学校のほうで使っているPCが初期化されてたので仮想環境の設定も初期状態に戻りました。なんてことしてくれてんだ。去年ハマった問題を他の人にも分かりやすいよう、忘れないように書き残しておきます。PHPを使ってDBに値を入れたときに入らなかったり、真っ白になった、時に参考にしてみてください。(Linuxコマンドは各自で調べてください。lsとcdとviさえ分かってれば何とかなるはずですが。。。) とりあえずvagrantを使っているのでvagrant upで立ち上げます。(初回起動なのでupです。次回起動はreloadで。)upが正常にできたらpublicフォルダにindex.htmlでも入れて確認してください。ここでは端折ります。 ここからvirtualboxで仮想マシンを操作していきます。(学校はCentOSでした。)sudoコマンドを使いたい方はそのままvagrantでログインしてもよいですが、この先はrootで入ってもらってること前提で書きます。 まずはhttpd.confの確認をします。REST APIを使用するにあたって、LoadModule rewrite module modules/mod_rewrite.soの行が入っていること前提です。(あんまり詳しくないですが、cat httpd.conf | grep LoadModule rewrite module modules/mod_rewrite.soな感じにコマンド叩いてやれば、わかる…はず。。。)なかったら適当にLoadModuleがいっぱいあるところがあるのでその辺りに記述すれば動くはずです。 次にphp.iniの確認です。 確認事項リスト memory_limit post_max_size upload_max_filesize です。上からデフォルトで128M,8M,2Mになっているはずなので値を大きくするとアップロードできる容量が大きくなります。設定するとするとmemory_limit &gt; post_max_size &gt; upload_max_filesizeこんな感じの設定でとりあえず大丈夫だと思います。 最後にmy.confの設定です。確認するのは、max_allowed_packetです。これは[mysqld]の下に記述を足してください。イメージとしては、[mysqld]max_allowed_packet=64MBみたいに記述してやれば十分だと思います。 コマンドプロンプト側からvagrant reloadで仮想マシンを再起動させてやってください。これで設定が反映されるはずですので&lt;?php echo phpinfo(); ?&gt;とかで確認してください。 これで多少大きいファイルをアップロードしても大丈夫になります。私はbase64を入れまくってたらこの問題に当たりました。 このメモで誰か一人でも参考になれば幸いです。","link":"/diary/2019/04/02/REST-API作るときにコケたこと/"},{"title":"色々つまづいたこと","text":"今回GitHub PagesやHexoを初めて使ってみましたがメッチャつまづきました。そのことについて書いていこうかと思います。まず自分はなぜかGit自体導入済みだったのでGitHubのアカウント作成からでした。アカウント作成からリポジトリ作成までは割愛させてもらいます。 GitHubにhtmlをpushしてGitHub Pagesで見る リポジトリ作成できたらindex.htmlをpushしてGitHub Pagesでもう表示できるな～と思ってました。色々なサイト参考にしましたが書いてなくて焦りましたが手順がもう一つあったようです。 どうやら、リポジトリのSettingからGitHub PagesのSourceを切り替えないと見れないらしい。 これでhttps:/ユーザーネーム.github.io/リポジトリの名前/で無事見れるようになります。 マークダウンで書くの心が辛くなってくるのでここまでにしておきます。","link":"/diary/2019/03/29/色々つまづいたこと/"},{"title":"データベース接続の備忘録(SELECT編)","text":"週一回は更新しようと頑張っているが眠かったり色々… 今日はPHPでデータベース(MySQL)から値を取るやつを備忘録的に書こうと思います。(自分なりの書き方ですが。) データベースはとりあえずこんな感じで想像してください。 test id title detail 1 hoge hogehoge 2 fuga fugafuga 3 piyo piyopiyo とりあえず何回もDBに接続する前提で関数作っときます。1234567891011121314151617181920&lt;?php function DBConnect(){ $host = &apos;localhost&apos;; //ここはhost名を入れてください。自分の環境はvagrant環境なのでlocalhostにしてあります。 $dbname = &apos;test&apos;; //データベースの名前入れてください。 $user = &apos;hoge&apos;; //ユーザー名を入れてください。 $pass = &apos;fuga&apos;; //パスワードを入れてください。 $db = &apos;mysql:host=&apos;.$host.&apos;;dbname=&apos;.dbname.&apos;;charset=utf8;&apos;; //ちょっと見にくいですが、感覚的には、 //&apos;mysql:host=localhost;dbname=test;charset=utf8;&apos;になります。 try{ $pdo = new PDO($db,$user,$host); return $pdo; }catch(PDOException $e){ return $e-&gt;getMessage(); } }?&gt; これで呼び出せば何回でもイケます(適当) ここから頑張ってSELECT分発行して値を取ります。12345678910111213&lt;?php $pdo = DBConnect(); //さっき書いた関数呼び出し $sql = &quot;SELECT * FROM test&quot;; //SELECT文をざっと書く(今回はtestテーブル全部取ってこいって感じのを書いてます) $sth = $pdo-&gt;prepare($sql); $sth-&gt;execute(); $result = $sth-&gt;fetchAll(PDO::FETCH_ASSOC); foreach($result as $key){ echo &apos;&lt;p&gt;&apos;.$key[&apos;title&apos;].&apos; : &apos;.$key[&apos;detail&apos;].&apos;&lt;/p&gt;&apos;; }?&gt; 多分、hoge : hogehogefuga : fugafugapiyo : piyopiyoみたいに出ると思います。 突然書かれても理解できなさそうなので$resultの中身を書きます。 1234567891011121314151617$result = array( 0 =&gt; array( &apos;id&apos; =&gt; &apos;1&apos;, &apos;title&apos; =&gt; &apos;hoge&apos;, &apos;detail&apos; =&gt; &apos;hogehoge&apos; ), 1 =&gt; array( &apos;id&apos; =&gt; &apos;2&apos;, &apos;title&apos; =&gt; &apos;fuga&apos;, &apos;detail&apos; =&gt; &apos;fugafuga&apos; ), 2 =&gt; array( &apos;id&apos; =&gt; &apos;3&apos;, &apos;title&apos; =&gt; &apos;piyo&apos;, &apos;detail&apos; =&gt; &apos;piyopiyo&apos; )); のような連想配列になっているはずです。なのでforeachでの一回目のループは0['title']と0['detail']を出力してることになります！ これでいい感じにDBからデータを無限に参照しましょう。ここどうするん～？？？みたいな質問も気づくように言ってもらえればわかる範囲で答えます。あと、勉強したての学生なので間違ってるところは後でコッソリ教えてほしいです","link":"/diary/2019/04/18/データベース接続の備忘録-SELECT編/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","link":"/diary/tags/JavaScript/"},{"name":"Vue.js","slug":"Vue-js","link":"/diary/tags/Vue-js/"},{"name":"Bootstrap","slug":"Bootstrap","link":"/diary/tags/Bootstrap/"},{"name":"jQuery","slug":"jQuery","link":"/diary/tags/jQuery/"},{"name":"Linux","slug":"Linux","link":"/diary/tags/Linux/"},{"name":"PHP","slug":"PHP","link":"/diary/tags/PHP/"},{"name":"MySQL","slug":"MySQL","link":"/diary/tags/MySQL/"},{"name":"Git","slug":"Git","link":"/diary/tags/Git/"},{"name":"GitHub","slug":"GitHub","link":"/diary/tags/GitHub/"},{"name":"GitHub Pages","slug":"GitHub-Pages","link":"/diary/tags/GitHub-Pages/"}],"categories":[{"name":"フロントエンド","slug":"フロントエンド","link":"/diary/categories/フロントエンド/"},{"name":"雑多","slug":"雑多","link":"/diary/categories/雑多/"},{"name":"サーバサイド","slug":"サーバサイド","link":"/diary/categories/サーバサイド/"},{"name":"Git","slug":"Git","link":"/diary/categories/Git/"}]}